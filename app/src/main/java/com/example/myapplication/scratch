
Combat flow

Select attacks, uses stamina per card, regen X per turn

EXAMPLE

I select slash(speed 2, stamina 2)

Enemies lock in their attacks

Turn order decided by speed.

One by one each attack is resolved in order of lowest speed to highest

So in this turn, the player would attack once, and block once

When the player attacks, each ability will have a window of timing, a flash where a new input can be made. If timed right, the player can
use whichever ability they chose, as long as they can afford the stamina cost

If the player inputs nothing, it does normal damage,
if they hit the timing it does increased
but if they attempt and miss it decreases.

Towerclimb mode, start recording for X minutes, get as many steps as you can.



GPT's timing suggestion
// Function to handle the timing logic
fun handleTiming() {
    val currentTime = System.currentTimeMillis()
    val timeSinceLastTap = currentTime - lastTapTime
    lastTapTime = currentTime

    // Check if the tap was within the correct timing window
    val correctTiming = timeSinceLastTap in 250..750

    if (correctTiming) {
        println("Damage increased by timing success")
    } else {
        println("Timing failed")
    }
}

// Set up the timing listener separately
val timingListener = View.OnClickListener {
    handleTiming()
}

// Set up the attack button listener to call the timing logic first
attackButton.setOnClickListener {
    handleTiming()
    // Perform the attack logic here
    animateKnight()
    generatePlayerTurnOrder(abilityOneSkill)
    startAttackAnimation()
    generateTurnOrder(abilityOneSkill,enemyList)
    println("You did " + abilityOneSkill.damage + " damage!")
}

// Assign the timing listener to the timing button
timingButton.setOnClickListener(timingListener)



